<?php

use Smaakvoldelen\UnitsOfMeasure\Units\Mass;

it('can be constructed', function (string $measurement) {
    expect(Mass::from('1 '.$measurement))
        ->toBeInstanceOf(Mass::class);
})->with([
    'Yg',
    'yottagram',
    'yottagrams',
    'Zg',
    'zettagram',
    'zettagrams',
    'Eg',
    'exagram',
    'exagrams',
    'Pg',
    'petagram',
    'petagrams',
    'Tg',
    'teragram',
    'teragrams',
    'Gg',
    'gigagram',
    'gigagrams',
    'Mg',
    'megagram',
    'megagrams',
    'kg',
    'kilogram',
    'kilograms',
    'hg',
    'hectogram',
    'hectograms',
    'dag',
    'decagram',
    'decagrams',
    'g',
    'gram',
    'grams',
    'dg',
    'decigram',
    'decigrams',
    'cg',
    'centigram',
    'centigrams',
    'mg',
    'milligram',
    'milligrams',
    'Âµg',
    'microgram',
    'micrograms',
    'ng',
    'nanogram',
    'nanograms',
    'pg',
    'picogram',
    'picograms',
    'fg',
    'femtogram',
    'femtograms',
    'ag',
    'attogram',
    'attograms',
    'zg',
    'zeptogram',
    'zeptograms',
    'yg',
    'yoctogram',
    'yoctograms',
    't',
    'tonne',
    'tonnes',
    'gr',
    'grain',
    'grains',
    'dr',
    'drachm',
    'drachms',
    'oz',
    'ounce',
    'ounces',
    'lb',
    'pound',
    'pounds',
    'st',
    'stone',
    'stones',
    'qr',
    'quarter',
    'quarters',
    'short cwt',
    'short hundredweight',
    'short hundredweights',
    'long cwt',
    'long hundredweight',
    'long hundredweights',
    'short ton',
    'short tons',
    'long ton',
    'long tons',
]);

it('throws an exception if the unit is unknown', function () {
    Mass::from('1 unknown');
})->throws(BadMethodCallException::class, 'No measurement found for expression: 1 unknown');

it('throws an exception if the expression is invalid', function () {
    ray(Mass::from('1'));
})->throws(BadMethodCallException::class);
